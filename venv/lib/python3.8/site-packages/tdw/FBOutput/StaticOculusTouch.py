# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FBOutput

import tdw.flatbuffers

class StaticOculusTouch(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStaticOculusTouch(cls, buf, offset):
        n = tdw.flatbuffers.encode.Get(tdw.flatbuffers.packer.uoffset, buf, offset)
        x = StaticOculusTouch()
        x.Init(buf, n + offset)
        return x

    # StaticOculusTouch
    def Init(self, buf, pos):
        self._tab = tdw.flatbuffers.table.Table(buf, pos)

    # StaticOculusTouch
    def BodyId(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StaticOculusTouch
    def LeftHandId(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StaticOculusTouch
    def RightHandId(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StaticOculusTouch
    def HumanHands(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(tdw.flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def StaticOculusTouchStart(builder): builder.StartObject(4)
def StaticOculusTouchAddBodyId(builder, bodyId): builder.PrependInt32Slot(0, bodyId, 0)
def StaticOculusTouchAddLeftHandId(builder, leftHandId): builder.PrependInt32Slot(1, leftHandId, 0)
def StaticOculusTouchAddRightHandId(builder, rightHandId): builder.PrependInt32Slot(2, rightHandId, 0)
def StaticOculusTouchAddHumanHands(builder, humanHands): builder.PrependBoolSlot(3, humanHands, 0)
def StaticOculusTouchEnd(builder): return builder.EndObject()
